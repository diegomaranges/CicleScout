{"ast":null,"code":"import firebase from 'firebase';\nimport { firebaseAuth } from 'src/firebase';\nimport { INIT_AUTH, SIGN_IN_ERROR, SIGN_IN_SUCCESS, SIGN_OUT_SUCCESS } from './action-types';\n\nfunction authenticate(provider) {\n  return dispatch => {\n    firebaseAuth.signInWithPopup(provider).then(result => dispatch(signInSuccess(result))).catch(error => dispatch(signInError(error)));\n  };\n}\n\nexport function initAuth(user) {\n  return {\n    type: INIT_AUTH,\n    payload: user\n  };\n}\nexport function signInError(error) {\n  return {\n    type: SIGN_IN_ERROR,\n    payload: error\n  };\n}\nexport function signInSuccess(result) {\n  return {\n    type: SIGN_IN_SUCCESS,\n    payload: result.user\n  };\n}\nexport function signInWithGithub() {\n  return authenticate(new firebase.auth.GithubAuthProvider());\n}\nexport function signInWithGoogle() {\n  return authenticate(new firebase.auth.GoogleAuthProvider());\n}\nexport function signInWithTwitter() {\n  return authenticate(new firebase.auth.TwitterAuthProvider());\n}\nexport function signOut() {\n  return dispatch => {\n    firebaseAuth.signOut().then(() => dispatch(signOutSuccess()));\n  };\n}\nexport function signOutSuccess() {\n  return {\n    type: SIGN_OUT_SUCCESS\n  };\n}","map":{"version":3,"sources":["/Users/diego.maranges/Documents/Scout/Scout-Page/CicleScout/ciclescout/src/auth/actions.js"],"names":["firebase","firebaseAuth","INIT_AUTH","SIGN_IN_ERROR","SIGN_IN_SUCCESS","SIGN_OUT_SUCCESS","authenticate","provider","dispatch","signInWithPopup","then","result","signInSuccess","catch","error","signInError","initAuth","user","type","payload","signInWithGithub","auth","GithubAuthProvider","signInWithGoogle","GoogleAuthProvider","signInWithTwitter","TwitterAuthProvider","signOut","signOutSuccess"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SACEC,SADF,EAEEC,aAFF,EAGEC,eAHF,EAIEC,gBAJF,QAKO,gBALP;;AAQA,SAASC,YAAT,CAAsBC,QAAtB,EAAgC;AAC9B,SAAOC,QAAQ,IAAI;AACjBP,IAAAA,YAAY,CAACQ,eAAb,CAA6BF,QAA7B,EACGG,IADH,CACQC,MAAM,IAAIH,QAAQ,CAACI,aAAa,CAACD,MAAD,CAAd,CAD1B,EAEGE,KAFH,CAESC,KAAK,IAAIN,QAAQ,CAACO,WAAW,CAACD,KAAD,CAAZ,CAF1B;AAGD,GAJD;AAKD;;AAGD,OAAO,SAASE,QAAT,CAAkBC,IAAlB,EAAwB;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAEhB,SADD;AAELiB,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID;AAGD,OAAO,SAASF,WAAT,CAAqBD,KAArB,EAA4B;AACjC,SAAO;AACLI,IAAAA,IAAI,EAAEf,aADD;AAELgB,IAAAA,OAAO,EAAEL;AAFJ,GAAP;AAID;AAGD,OAAO,SAASF,aAAT,CAAuBD,MAAvB,EAA+B;AACpC,SAAO;AACLO,IAAAA,IAAI,EAAEd,eADD;AAELe,IAAAA,OAAO,EAAER,MAAM,CAACM;AAFX,GAAP;AAID;AAGD,OAAO,SAASG,gBAAT,GAA4B;AACjC,SAAOd,YAAY,CAAC,IAAIN,QAAQ,CAACqB,IAAT,CAAcC,kBAAlB,EAAD,CAAnB;AACD;AAGD,OAAO,SAASC,gBAAT,GAA4B;AACjC,SAAOjB,YAAY,CAAC,IAAIN,QAAQ,CAACqB,IAAT,CAAcG,kBAAlB,EAAD,CAAnB;AACD;AAGD,OAAO,SAASC,iBAAT,GAA6B;AAClC,SAAOnB,YAAY,CAAC,IAAIN,QAAQ,CAACqB,IAAT,CAAcK,mBAAlB,EAAD,CAAnB;AACD;AAGD,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAOnB,QAAQ,IAAI;AACjBP,IAAAA,YAAY,CAAC0B,OAAb,GACGjB,IADH,CACQ,MAAMF,QAAQ,CAACoB,cAAc,EAAf,CADtB;AAED,GAHD;AAID;AAGD,OAAO,SAASA,cAAT,GAA0B;AAC/B,SAAO;AACLV,IAAAA,IAAI,EAAEb;AADD,GAAP;AAGD","sourcesContent":["import firebase from 'firebase';\nimport { firebaseAuth } from 'src/firebase';\nimport {\n  INIT_AUTH,\n  SIGN_IN_ERROR,\n  SIGN_IN_SUCCESS,\n  SIGN_OUT_SUCCESS\n} from './action-types';\n\n\nfunction authenticate(provider) {\n  return dispatch => {\n    firebaseAuth.signInWithPopup(provider)\n      .then(result => dispatch(signInSuccess(result)))\n      .catch(error => dispatch(signInError(error)));\n  };\n}\n\n\nexport function initAuth(user) {\n  return {\n    type: INIT_AUTH,\n    payload: user\n  };\n}\n\n\nexport function signInError(error) {\n  return {\n    type: SIGN_IN_ERROR,\n    payload: error\n  };\n}\n\n\nexport function signInSuccess(result) {\n  return {\n    type: SIGN_IN_SUCCESS,\n    payload: result.user\n  };\n}\n\n\nexport function signInWithGithub() {\n  return authenticate(new firebase.auth.GithubAuthProvider());\n}\n\n\nexport function signInWithGoogle() {\n  return authenticate(new firebase.auth.GoogleAuthProvider());\n}\n\n\nexport function signInWithTwitter() {\n  return authenticate(new firebase.auth.TwitterAuthProvider());\n}\n\n\nexport function signOut() {\n  return dispatch => {\n    firebaseAuth.signOut()\n      .then(() => dispatch(signOutSuccess()));\n  };\n}\n\n\nexport function signOutSuccess() {\n  return {\n    type: SIGN_OUT_SUCCESS\n  };\n}\n"]},"metadata":{},"sourceType":"module"}