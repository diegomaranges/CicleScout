{"ast":null,"code":"import { firebaseDb } from './firebase';\nexport class FirebaseList {\n  constructor(actions, modelClass, path = null) {\n    this._actions = actions;\n    this._modelClass = modelClass;\n    this._path = path;\n  }\n\n  get path() {\n    return this._path;\n  }\n\n  set path(value) {\n    this._path = value;\n  }\n\n  push(value) {\n    return new Promise((resolve, reject) => {\n      firebaseDb.ref(this._path).push(value, error => error ? reject(error) : resolve());\n    });\n  }\n\n  remove(key) {\n    return new Promise((resolve, reject) => {\n      firebaseDb.ref(\"\".concat(this._path, \"/\").concat(key)).remove(error => error ? reject(error) : resolve());\n    });\n  }\n\n  set(key, value) {\n    return new Promise((resolve, reject) => {\n      firebaseDb.ref(\"\".concat(this._path, \"/\").concat(key)).set(value, error => error ? reject(error) : resolve());\n    });\n  }\n\n  update(key, value) {\n    return new Promise((resolve, reject) => {\n      firebaseDb.ref(\"\".concat(this._path, \"/\").concat(key)).update(value, error => error ? reject(error) : resolve());\n    });\n  }\n\n  subscribe(emit) {\n    let ref = firebaseDb.ref(this._path);\n    let initialized = false;\n    let list = [];\n    ref.once('value', () => {\n      initialized = true;\n      emit(this._actions.onLoad(list));\n    });\n    ref.on('child_added', snapshot => {\n      if (initialized) {\n        emit(this._actions.onAdd(this.unwrapSnapshot(snapshot)));\n      } else {\n        list.push(this.unwrapSnapshot(snapshot));\n      }\n    });\n    ref.on('child_changed', snapshot => {\n      emit(this._actions.onChange(this.unwrapSnapshot(snapshot)));\n    });\n    ref.on('child_removed', snapshot => {\n      emit(this._actions.onRemove(this.unwrapSnapshot(snapshot)));\n    });\n\n    this._unsubscribe = () => ref.off();\n  }\n\n  unsubscribe() {\n    this._unsubscribe();\n  }\n\n  unwrapSnapshot(snapshot) {\n    let attrs = snapshot.val();\n    attrs.key = snapshot.key;\n    return new this._modelClass(attrs);\n  }\n\n}","map":{"version":3,"sources":["/Users/diego.maranges/Documents/Scout/Scout-Page/CicleScout/ciclescout/src/firebase/firebase-list.js"],"names":["firebaseDb","FirebaseList","constructor","actions","modelClass","path","_actions","_modelClass","_path","value","push","Promise","resolve","reject","ref","error","remove","key","set","update","subscribe","emit","initialized","list","once","onLoad","on","snapshot","onAdd","unwrapSnapshot","onChange","onRemove","_unsubscribe","off","unsubscribe","attrs","val"],"mappings":"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","sourcesContent":["import { firebaseDb } from './firebase';\n\n\nexport class FirebaseList {\n  constructor(actions, modelClass, path = null) {\n    this._actions = actions;\n    this._modelClass = modelClass;\n    this._path = path;\n  }\n\n  get path() {\n    return this._path;\n  }\n\n  set path(value) {\n    this._path = value;\n  }\n\n  push(value) {\n    return new Promise((resolve, reject) => {\n      firebaseDb.ref(this._path)\n        .push(value, error => error ? reject(error) : resolve());\n    });\n  }\n\n  remove(key) {\n    return new Promise((resolve, reject) => {\n      firebaseDb.ref(`${this._path}/${key}`)\n        .remove(error => error ? reject(error) : resolve());\n    });\n  }\n\n  set(key, value) {\n    return new Promise((resolve, reject) => {\n      firebaseDb.ref(`${this._path}/${key}`)\n        .set(value, error => error ? reject(error) : resolve());\n    });\n  }\n\n  update(key, value) {\n    return new Promise((resolve, reject) => {\n      firebaseDb.ref(`${this._path}/${key}`)\n        .update(value, error => error ? reject(error) : resolve());\n    });\n  }\n\n  subscribe(emit) {\n    let ref = firebaseDb.ref(this._path);\n    let initialized = false;\n    let list = [];\n\n    ref.once('value', () => {\n      initialized = true;\n      emit(this._actions.onLoad(list));\n    });\n\n    ref.on('child_added', snapshot => {\n      if (initialized) {\n        emit(this._actions.onAdd(this.unwrapSnapshot(snapshot)));\n      }\n      else {\n        list.push(this.unwrapSnapshot(snapshot));\n      }\n    });\n\n    ref.on('child_changed', snapshot => {\n      emit(this._actions.onChange(this.unwrapSnapshot(snapshot)));\n    });\n\n    ref.on('child_removed', snapshot => {\n      emit(this._actions.onRemove(this.unwrapSnapshot(snapshot)));\n    });\n\n    this._unsubscribe = () => ref.off();\n  }\n\n  unsubscribe() {\n    this._unsubscribe();\n  }\n\n  unwrapSnapshot(snapshot) {\n    let attrs = snapshot.val();\n    attrs.key = snapshot.key;\n    return new this._modelClass(attrs);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}