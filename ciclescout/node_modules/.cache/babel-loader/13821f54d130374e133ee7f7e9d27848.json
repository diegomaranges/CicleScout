{"ast":null,"code":"import { routerMiddleware } from 'react-router-redux';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport history from './history';\nimport reducers from './reducers';\nexport default ((initialState = {}) => {\n  let middleware = applyMiddleware(thunk, routerMiddleware(history));\n\n  if (process.env.NODE_ENV !== 'production') {\n    const devToolsExtension = window.devToolsExtension;\n\n    if (typeof devToolsExtension === 'function') {\n      middleware = compose(middleware, devToolsExtension());\n    }\n  }\n\n  const store = createStore(reducers, initialState, middleware);\n\n  if (module.hot) {\n    module.hot.accept('./reducers', () => {\n      store.replaceReducer(require('./reducers').default);\n    });\n  }\n\n  return store;\n});","map":{"version":3,"sources":["/Users/diego.maranges/Documents/Scout/Scout-Page/todo-react-redux/src/store.js"],"names":["routerMiddleware","applyMiddleware","compose","createStore","thunk","history","reducers","initialState","middleware","process","env","NODE_ENV","devToolsExtension","window","store","module","hot","accept","replaceReducer","require","default"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,oBAAjC;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAGA,gBAAe,CAACC,YAAY,GAAG,EAAhB,KAAuB;AACpC,MAAIC,UAAU,GAAGP,eAAe,CAACG,KAAD,EAAQJ,gBAAgB,CAACK,OAAD,CAAxB,CAAhC;;AAEA,MAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAMC,iBAAiB,GAAGC,MAAM,CAACD,iBAAjC;;AACA,QAAI,OAAOA,iBAAP,KAA6B,UAAjC,EAA6C;AAC3CJ,MAAAA,UAAU,GAAGN,OAAO,CAACM,UAAD,EAAaI,iBAAiB,EAA9B,CAApB;AACD;AACF;;AAED,QAAME,KAAK,GAAGX,WAAW,CAACG,QAAD,EAAWC,YAAX,EAAyBC,UAAzB,CAAzB;;AAEA,MAAIO,MAAM,CAACC,GAAX,EAAgB;AACdD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,YAAlB,EAAgC,MAAM;AACpCH,MAAAA,KAAK,CAACI,cAAN,CAAqBC,OAAO,CAAC,YAAD,CAAP,CAAsBC,OAA3C;AACD,KAFD;AAGD;;AAED,SAAON,KAAP;AACD,CAnBD","sourcesContent":["import { routerMiddleware } from 'react-router-redux';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport history from './history';\nimport reducers from './reducers';\n\n\nexport default (initialState = {}) => {\n  let middleware = applyMiddleware(thunk, routerMiddleware(history));\n\n  if (process.env.NODE_ENV !== 'production') {\n    const devToolsExtension = window.devToolsExtension;\n    if (typeof devToolsExtension === 'function') {\n      middleware = compose(middleware, devToolsExtension());\n    }\n  }\n\n  const store = createStore(reducers, initialState, middleware);\n\n  if (module.hot) {\n    module.hot.accept('./reducers', () => {\n      store.replaceReducer(require('./reducers').default);\n    });\n  }\n\n  return store;\n};\n"]},"metadata":{},"sourceType":"module"}